@using MuSu.Data 
@using System.Linq  

@model List<Song>  

@{
    ViewData["Title"] = "Recommendation";
}

<div class="text-center">
    <h1 class="display-3">Your Recommendation</h1>

    <!-- Needs to be fixed -- Supposed to display the chosen genres 
    <form>
        <button>Genre - - X</button>
    </form>
    
    <form>
        <button>Artist - - X</button>
    </form>

    <form>
        <button>Mood - - X</button>
    </form>--->

    @if (Model != null && Model.Any())
    {
        <p style="font-size: 1.5rem; padding-bottom: 50px;"><strong>@Model.FirstOrDefault()?.SongTitle</strong> - @Model.FirstOrDefault()?.Artist?.ArtistName</p>
        <p>Open In:</p>

        <div class="d-flex justify-content-center gap-3">
            @if (!string.IsNullOrEmpty(Model.FirstOrDefault()?.YouTubeUrl))
            {
                <form action="@Model.FirstOrDefault()?.YouTubeUrl" method="get" target="_blank">
                    <button type="submit">YouTube</button>
                </form>
            }

            @if (!string.IsNullOrEmpty(Model.FirstOrDefault()?.SpotifyUrl))
            {
                <form action="@Model.FirstOrDefault()?.SpotifyUrl" method="get" target="_blank">
                    <button type="submit">Spotify</button>
                </form>
            }

            @if (!string.IsNullOrEmpty(Model.FirstOrDefault()?.AppleMusicUrl))
            {
                <form action="@Model.FirstOrDefault()?.AppleMusicUrl" method="get" target="_blank">
                    <button type="submit">Apple Music</button>
                </form>
            }
        </div>
    }
    else
    {
        <p>No recommendations available for the selected moods.</p>
    }

    <form action="/Home/Genre" method="get" style="padding-top: 60px;">
        <button type="submit" class="large-button">Get More Suggestions</button>
    </form>
</div>
